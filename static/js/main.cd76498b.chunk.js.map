{"version":3,"sources":["components/Header.js","components/NewPlantForm.js","components/PlantCard.js","components/PlantList.js","components/Search.js","components/PlantPage.js","components/img/demoplant.gif","components/Intro.js","components/App.js","index.js"],"names":["Header","className","role","NewPlantForm","handleAddPlant","useState","name","setName","image","setImage","price","setPrice","onSubmit","e","preventDefault","console","log","fetch","method","headers","body","JSON","stringify","then","r","json","newPlant","type","placeholder","value","onChange","target","step","parseFloat","PlantCard","plant","isInStock","setIsInStock","handleStock","src","alt","onClick","PlantList","plants","map","id","Search","searchTerm","onSearchChange","htmlFor","PlantPage","setPlants","setSearchTerm","useEffect","plantsArray","displayedPlants","filter","toLowerCase","includes","to","updatedPlantsArray","Intro","GIF","href","App","path","ReactDOM","render","document","getElementById"],"mappings":"uQAeeA,MAbf,WACE,OACE,iCACE,yCAEE,sBAAMC,UAAU,OAAOC,KAAK,MAA5B,gC,eCoCOC,MAzCf,YAA2C,IAAnBC,EAAkB,EAAlBA,eAAkB,EAEdC,mBAAS,IAFK,mBAE/BC,EAF+B,KAEzBC,EAFyB,OAGZF,mBAAS,IAHG,mBAG/BG,EAH+B,KAGxBC,EAHwB,OAIZJ,mBAAS,IAJG,mBAI/BK,EAJ+B,KAIxBC,EAJwB,KAyBxC,OACE,sBAAKV,UAAU,iBAAf,UACE,2CACA,uBAAMW,SAtBR,SAAsBC,GACpBA,EAAEC,iBACFC,QAAQC,IAAI,gBACZC,MAAM,yCAA0C,CAC9CC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBhB,KAAMA,EACNE,MAAOA,EACPE,MAAOA,MAGRa,MAAK,SAACC,GAAD,OAAOA,EAAEC,UACdF,MAAK,SAACG,GAAD,OAActB,EAAesB,OAOrC,UACE,uBAAOC,KAAK,OAAOrB,KAAK,OAAOsB,YAAY,aAC3CC,MAAOvB,EAAMwB,SAAU,SAACjB,GAAD,OAAON,EAAQM,EAAEkB,OAAOF,UAC/C,uBAAOF,KAAK,OAAOrB,KAAK,QAAQsB,YAAY,YAC5CC,MAAOrB,EAAOsB,SAAU,SAACjB,GAAD,OAAOJ,EAASI,EAAEkB,OAAOF,UACjD,uBAAOF,KAAK,SAASrB,KAAK,QAAQ0B,KAAK,OAAOJ,YAAY,QAC1DC,MAAOnB,EAAOoB,SAAU,SAACjB,GAAD,OAAOF,EAASsB,WAAWpB,EAAEkB,OAAOF,WAC5D,wBAAQF,KAAK,SAAb,8BCXOO,MAvBf,YAA+B,IAAVC,EAAS,EAATA,MAAS,EAEM9B,oBAAS,GAFf,mBAErB+B,EAFqB,KAEVC,EAFU,KAGnB/B,EAAsB6B,EAAtB7B,KAAME,EAAgB2B,EAAhB3B,MAAOE,EAASyB,EAATzB,MAEpB,SAAS4B,IACPD,GAAa,SAACD,GAAD,OAAgBA,KAGjC,OACE,qBAAInC,UAAU,OAAd,UACE,qBAAKsC,IAAK/B,EAAOgC,IAAKlC,IACtB,6BAAKA,IACL,wCAAWI,KACV0B,EACC,wBAAQK,QAASH,EAAarC,UAAU,UAAxC,sBAEA,wBAAQwC,QAASH,EAAjB,8BCLOI,MAZf,YAAgC,IAAXC,EAAU,EAAVA,OACnB,OACE,oBAAI1C,UAAU,QAAd,SACG0C,EAAOC,KAAI,SAACT,GACX,OAAO,cAAC,EAAD,CAEPA,MAAOA,GADFA,EAAMU,UCSJC,MAff,YAAiD,IAA/BC,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,eAC5B,OACE,sBAAK/C,UAAU,YAAf,UACE,uBAAOgD,QAAQ,SAAf,4BACA,uBACEtB,KAAK,OACLkB,GAAG,SACHjB,YAAY,2BACZC,MAAOkB,EACPjB,SAAU,SAACjB,GAAD,OAAOmC,EAAenC,EAAEkB,OAAOF,c,aCmClCqB,MAvCf,WAAsB,IAAD,EACS7C,mBAAS,IADlB,mBACZsC,EADY,KACJQ,EADI,OAEiB9C,mBAAS,IAF1B,mBAEZ0C,EAFY,KAEAK,EAFA,KAInBC,qBAAU,WACRpC,MAAM,0CACHM,MAAK,SAACC,GAAD,OAAOA,EAAEC,UACdF,MAAK,SAAA+B,GACJH,EAAUG,GACVvC,QAAQC,IAAI,aAAcsC,QAE9B,IAOF,IAAMC,EAAkBZ,EAAOa,QAAO,SAAArB,GACpC,OAAOA,EAAM7B,KAAKmD,cAAcC,SAASX,EAAWU,kBAGtD,OACE,iCACE,cAAC,IAAD,CAAME,GAAG,IAAT,SACE,qBAAK1D,UAAU,MAAf,SAAqB,sCAGvB,cAAC,IAAD,CAAM0D,GAAG,IAAT,SACE,qBAAK1D,UAAU,OAAf,SAAsB,sCAGxB,cAAC,EAAD,CAAcG,eAnBlB,SAAwBsB,GACtB,IAAMkC,EAAkB,sBAAOjB,GAAP,CAAejB,IACvCyB,EAAUS,MAkBR,cAAC,EAAD,CAAQb,WAAYA,EAAYC,eAAgBI,IAChD,cAAC,EAAD,CAAWT,OAAQY,QCzCV,MAA0B,sCCkD1BM,MA7Cf,WACI,OACI,sBAAK5D,UAAU,QAAf,UACI,cAAC,IAAD,CAAM0D,GAAG,OAAT,SACA,qBAAK1D,UAAU,MAAf,SAAqB,sCAGrB,sBAAKA,UAAU,cAAf,UACI,qBAAKA,UAAU,MAAMsC,IAAKuB,EAAKtB,IAAI,KACnC,oBAAIvC,UAAU,eAAd,qBAEJ,sBAAKA,UAAU,eAAf,UACA,oBAAIA,UAAU,UAAd,qBAAoC,uBACpC,oBAAIA,UAAU,UAAd,2BACI,qUAEoI,uBAChI,oBAAIA,UAAU,UAAd,mCACJ,+BACI,4EAGA,2FAGA,mEAGA,6GAKJ,cAAC,IAAD,CAAM0D,GAAG,OAAT,SACA,wBAAQ1D,UAAU,cAAlB,kCAEA,mBAAG8D,KAAK,4EAAR,SACA,wBAAQ9D,UAAU,cAAlB,gC,OCfD+D,MArBf,WACE,OACF,cAAC,IAAD,UACA,qBAAK/D,UAAU,MAAf,SACE,eAAC,IAAD,WACA,eAAC,IAAD,CAAOgE,KAAK,OAAZ,UACA,cAAC,EAAD,IACA,cAAC,EAAD,OAGA,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACA,cAAC,EAAD,cCZFC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.cd76498b.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header() {\n  return (\n    <header>\n      <h1>\n        Plantsy\n        <span className=\"logo\" role=\"img\">\n          ðŸŒ±\n        </span>\n      </h1>\n    </header>\n  );\n}\n\nexport default Header;\n","import React, { useState } from \"react\";\n\nfunction NewPlantForm({ handleAddPlant }) {\n\n    const [name, setName] = useState(\"\")\n    const [image, setImage] = useState(\"\")\n    const [price, setPrice] = useState(\"\")\n\n    function handleSubmit(e) {\n      e.preventDefault();\n      console.log(\"HandleSubmit\")\n      fetch(\"https://plantdb01.herokuapp.com/plants\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          name: name,\n          image: image,\n          price: price,\n        }),\n      })\n        .then((r) => r.json())\n        .then((newPlant) => handleAddPlant(newPlant));\n        \n    }\n\n  return (\n    <div className=\"new-plant-form\">\n      <h2>New Plant</h2>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"name\" placeholder=\"Plant name\" \n        value={name} onChange={(e) => setName(e.target.value)}/>\n        <input type=\"text\" name=\"image\" placeholder=\"Image URL\" \n        value={image} onChange={(e) => setImage(e.target.value)}/>\n        <input type=\"number\" name=\"price\" step=\"0.01\" placeholder=\"Price\" \n        value={price} onChange={(e) => setPrice(parseFloat(e.target.value))} />\n        <button type=\"submit\">Add Plant</button>\n      </form>\n    </div>\n  );\n}\n\nexport default NewPlantForm;\n","import React, { useState } from \"react\";\n\n\nfunction PlantCard({ plant }) {\n\n  const [isInStock, setIsInStock] = useState(true)\n    const {name, image, price} = plant\n\n    function handleStock(){\n      setIsInStock((isInStock) => !isInStock)\n    }\n\n  return (\n    <li className=\"card\">\n      <img src={image} alt={name} />\n      <h4>{name}</h4>\n      <p>Price: {price}</p>\n      {isInStock ? (\n        <button onClick={handleStock} className=\"primary\">In Stock</button>\n      ) : (\n        <button onClick={handleStock}>Out of Stock</button>\n      )}\n    </li>\n  );\n}\n\nexport default PlantCard;\n","import React from \"react\";\nimport PlantCard from \"./PlantCard\";\n\nfunction PlantList({ plants }) {\n  return (\n    <ul className=\"cards\">\n      {plants.map((plant) => {\n        return <PlantCard  \n        key={plant.id}\n        plant={plant}\n        />\n      })}</ul>\n  );\n}\n\nexport default PlantList;\n","import React from \"react\";\n\nfunction Search({ searchTerm, onSearchChange }) {\n  return (\n    <div className=\"searchbar\">\n      <label htmlFor=\"search\">Search Plants:</label>\n      <input\n        type=\"text\"\n        id=\"search\"\n        placeholder=\"Type a name to search...\"\n        value={searchTerm}\n        onChange={(e) => onSearchChange(e.target.value)}\n      />\n    </div>\n  );\n}\n\nexport default Search;\n","import React, { useEffect, useState } from \"react\";\nimport NewPlantForm from \"./NewPlantForm\";\nimport PlantList from \"./PlantList\";\nimport Search from \"./Search\";\nimport { Link } from \"react-router-dom\";\nimport \"./Intro.css\";\n\nfunction PlantPage() {\n  const [plants, setPlants] = useState([])\n  const [searchTerm, setSearchTerm] = useState(\"\")\n\n  useEffect(() => {\n    fetch(\"https://plantdb01.herokuapp.com/plants\")\n      .then((r) => r.json())\n      .then(plantsArray => {\n        setPlants(plantsArray)\n        console.log(\"Get plants\", plantsArray)\n      })\n  },[]);\n\n  function handleAddPlant(newPlant){\n    const updatedPlantsArray = [...plants, newPlant]\n    setPlants(updatedPlantsArray)\n  }\n\n  const displayedPlants = plants.filter(plant => {\n    return plant.name.toLowerCase().includes(searchTerm.toLowerCase())\n  })\n\n  return (\n    <main>\n      <Link to=\"/\">  \n        <div className=\"btn\"><p>X</p></div>\n      </Link>\n      \n      <Link to=\"/\">  \n        <div className=\"btn2\"><p>X</p></div>\n      </Link>\n\n      <NewPlantForm handleAddPlant={handleAddPlant} />\n      <Search searchTerm={searchTerm} onSearchChange={setSearchTerm}/>\n      <PlantList plants={displayedPlants}/>\n    </main>\n  );\n}\n\nexport default PlantPage;\n","export default __webpack_public_path__ + \"static/media/demoplant.f7977ae4.gif\";","import React from 'react';\nimport \"./Intro.css\";\nimport GIF from \"./img/demoplant.gif\";\nimport { Link } from \"react-router-dom\";\n\nfunction Intro() {\n    return (\n        <div className=\"intro\">\n            <Link to=\"/app\">  \n            <div className=\"btn\"><p>X</p></div>\n            </Link>\n\n            <div className=\"intro__left\">\n                <img className=\"gif\" src={GIF} alt=\"\" />\n                <h1 className=\"h1title demo\">DEMO</h1>\n            </div>\n            <div className=\"intro__right\">\n            <h1 className=\"h1title\">Plantsy</h1><br></br>\n            <h2 className=\"h1title\">Instructions:</h2>\n                <p>Welcome to Plantsy! You've been tasked with building out some features for the \n                admin side of a plant store. The designers have put together the components and CSS. \n                Now it's up to you to bring the features to life by adding stateful logic as well as persisting data to the backend via our API.</p><br></br>\n                    <h2 className=\"h1title\">Project Requirements:</h2>\n                <ul>\n                    <li>\n                    When the app starts, I can see all plants.\n                    </li>\n                    <li>\n                    I can add a new plant to the page by submitting the form.\n                    </li>\n                    <li>\n                    I can mark a plant as \"sold out\".\n                    </li>\n                    <li>\n                    I can search for plants by their name and see a filtered list of plants.\n                    </li>\n                </ul>\n\n                <Link to=\"/app\">\n                <button className=\"introbutton\">View Final Product</button>\n                </Link>\n                <a href=\"https://github.com/jaimedavid01/react-hooks-mock-code-challenge-plantshop\">\n                <button className=\"introbutton\">View Code</button>\n                </a>\n            </div>\n            \n        </div>\n    )\n}\n\nexport default Intro;\n","import React from \"react\";\nimport Header from \"./Header\";\nimport PlantPage from \"./PlantPage\";\nimport Intro from './Intro';\nimport {Route, Switch, BrowserRouter as Router} from \"react-router-dom\";\n\nfunction App() {\n  return (\n<Router>\n<div className=\"App\">\n  <Switch>\n  <Route path=\"/app\">\n  <Header />\n  <PlantPage />\n  </Route>\n\n  <Route path=\"/\">\n  <Intro />\n  </Route>\n  \n  </Switch>\n\n</div>\n  </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}